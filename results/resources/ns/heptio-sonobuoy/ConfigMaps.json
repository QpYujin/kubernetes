[{"metadata":{"name":"sonobuoy-config-cm","namespace":"heptio-sonobuoy","selfLink":"/api/v1/namespaces/heptio-sonobuoy/configmaps/sonobuoy-config-cm","uid":"1b36b960-7ddf-11e7-bf00-0ea50f7b4c40","resourceVersion":"1313","creationTimestamp":"2017-08-10T15:18:04Z","labels":{"component":"sonobuoy"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"config.json\":\"{\\n  \\\"Description\\\": \\\"EXAMPLE\\\",\\n  \\\"Version\\\": \\\"v0.8.0\\\",\\n  \\\"ResultsDir\\\": \\\"/tmp/sonobuoy\\\",\\n  \\\"Resources\\\": [\\n    \\\"CertificateSigningRequests\\\",\\n    \\\"ClusterRoleBindings\\\",\\n    \\\"ClusterRoles\\\",\\n    \\\"ComponentStatuses\\\",\\n    \\\"Nodes\\\",\\n    \\\"PersistentVolumes\\\",\\n    \\\"PodSecurityPolicies\\\",\\n    \\\"ServerVersion\\\",\\n    \\\"StorageClasses\\\",\\n    \\\"ThirdPartyResources\\\",\\n    \\\"ConfigMaps\\\",\\n    \\\"DaemonSets\\\",\\n    \\\"Deployments\\\",\\n    \\\"Endpoints\\\",\\n    \\\"Events\\\",\\n    \\\"HorizontalPodAutoscalers\\\",\\n    \\\"Ingresses\\\",\\n    \\\"Jobs\\\",\\n    \\\"LimitRanges\\\",\\n    \\\"PersistentVolumeClaims\\\",\\n    \\\"Pods\\\",\\n    \\\"PodLogs\\\",\\n    \\\"PodDisruptionBudgets\\\",\\n    \\\"PodPresets\\\",\\n    \\\"PodTemplates\\\",\\n    \\\"ReplicaSets\\\",\\n    \\\"ReplicationControllers\\\",\\n    \\\"ResourceQuotas\\\",\\n    \\\"RoleBindings\\\",\\n    \\\"Roles\\\",\\n    \\\"ServiceAccounts\\\",\\n    \\\"Services\\\",\\n    \\\"StatefulSets\\\"\\n  ],\\n  \\\"Filters\\\": {\\n    \\\"LabelSelector\\\": \\\"\\\",\\n    \\\"Namespaces\\\": \\\".*\\\"\\n  },\\n  \\\"Server\\\": {\\n      \\\"advertiseaddress\\\": \\\"sonobuoy-master:8080\\\",\\n      \\\"bindaddress\\\": \\\"0.0.0.0\\\",\\n      \\\"bindport\\\": 8080,\\n      \\\"timeoutseconds\\\": 3600\\n  },\\n  \\\"PluginNamespace\\\": \\\"heptio-sonobuoy\\\",\\n  \\\"Plugins\\\": [\\n      {\\\"name\\\": \\\"systemd_logs\\\"},\\n      {\\\"name\\\": \\\"e2e\\\"}\\n  ]\\n}\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"component\":\"sonobuoy\"},\"name\":\"sonobuoy-config-cm\",\"namespace\":\"heptio-sonobuoy\"}}\n"}},"data":{"config.json":"{\n  \"Description\": \"EXAMPLE\",\n  \"Version\": \"v0.8.0\",\n  \"ResultsDir\": \"/tmp/sonobuoy\",\n  \"Resources\": [\n    \"CertificateSigningRequests\",\n    \"ClusterRoleBindings\",\n    \"ClusterRoles\",\n    \"ComponentStatuses\",\n    \"Nodes\",\n    \"PersistentVolumes\",\n    \"PodSecurityPolicies\",\n    \"ServerVersion\",\n    \"StorageClasses\",\n    \"ThirdPartyResources\",\n    \"ConfigMaps\",\n    \"DaemonSets\",\n    \"Deployments\",\n    \"Endpoints\",\n    \"Events\",\n    \"HorizontalPodAutoscalers\",\n    \"Ingresses\",\n    \"Jobs\",\n    \"LimitRanges\",\n    \"PersistentVolumeClaims\",\n    \"Pods\",\n    \"PodLogs\",\n    \"PodDisruptionBudgets\",\n    \"PodPresets\",\n    \"PodTemplates\",\n    \"ReplicaSets\",\n    \"ReplicationControllers\",\n    \"ResourceQuotas\",\n    \"RoleBindings\",\n    \"Roles\",\n    \"ServiceAccounts\",\n    \"Services\",\n    \"StatefulSets\"\n  ],\n  \"Filters\": {\n    \"LabelSelector\": \"\",\n    \"Namespaces\": \".*\"\n  },\n  \"Server\": {\n      \"advertiseaddress\": \"sonobuoy-master:8080\",\n      \"bindaddress\": \"0.0.0.0\",\n      \"bindport\": 8080,\n      \"timeoutseconds\": 3600\n  },\n  \"PluginNamespace\": \"heptio-sonobuoy\",\n  \"Plugins\": [\n      {\"name\": \"systemd_logs\"},\n      {\"name\": \"e2e\"}\n  ]\n}"}},{"metadata":{"name":"sonobuoy-e2e-config-8109ee14c9704d70","namespace":"heptio-sonobuoy","selfLink":"/api/v1/namespaces/heptio-sonobuoy/configmaps/sonobuoy-e2e-config-8109ee14c9704d70","uid":"240a3edd-7ddf-11e7-bf00-0ea50f7b4c40","resourceVersion":"1342","creationTimestamp":"2017-08-10T15:18:19Z","labels":{"component":"sonobuoy","sonobuoy-plugin":"e2e","sonobuoy-run":"8109ee14c9704d70","tier":"analysis"}},"data":{"worker.json":"{\"masterurl\":\"http://sonobuoy-master:8080/api/v1/results/global\",\"resulttype\":\"e2e\"}"}},{"metadata":{"name":"sonobuoy-plugins-cm","namespace":"heptio-sonobuoy","selfLink":"/api/v1/namespaces/heptio-sonobuoy/configmaps/sonobuoy-plugins-cm","uid":"1b3fca52-7ddf-11e7-bf00-0ea50f7b4c40","resourceVersion":"1314","creationTimestamp":"2017-08-10T15:18:04Z","labels":{"component":"sonobuoy"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"data\":{\"e2e.yaml\":\"name: e2e\\ndriver: Job\\nresultType: e2e\\nspec:\\n  serviceAccountName: sonobuoy-serviceaccount\\n  tolerations:\\n  - key: node-role.kubernetes.io/master\\n    operator: Exists\\n    effect: NoSchedule\\n  - key: CriticalAddonsOnly\\n    operator: Exists\\n  restartPolicy: Never\\n  containers:\\n  - name: e2e\\n    image: gcr.io/heptio-images/kube-conformance:latest\\n    imagePullPolicy: Always\\n    # NOTE: Full conformance can take a while depending on your cluster size.\\n    # As a result, only a single test is set atm to verify correctness.\\n    # Operators that want the complete test results can comment out the\\n    # env section.\\n    env:\\n    - name: E2E_FOCUS\\n      # Specifies a single conformance test. See above comment for details.\\n      value: \\\"Pods should be submitted and removed\\\"\\n    volumeMounts:\\n    - name: results\\n      mountPath: /tmp/results\\n  - name: sonobuoy-worker\\n    command:\\n    - sh\\n    - -c\\n    - /sonobuoy worker global -v 5 --logtostderr\\n    env:\\n    - name: NODE_NAME\\n      valueFrom:\\n        fieldRef:\\n          apiVersion: v1\\n          fieldPath: spec.nodeName\\n    - name: RESULTS_DIR\\n      value: /tmp/results\\n    image: gcr.io/heptio-images/sonobuoy:latest\\n    imagePullPolicy: Always\\n    volumeMounts:\\n    - name: config\\n      mountPath: /etc/sonobuoy\\n    - name: results\\n      mountPath: /tmp/results\\n  volumes:\\n  - name: results\\n    emptyDir: {}\\n  - name: config\\n    configMap:\\n      # This will be rewritten when the JobPlugin driver goes to launch the pod.\\n      name: __SONOBUOY_CONFIGMAP__\",\"systemdlogs.yaml\":\"name: systemd_logs\\ndriver: DaemonSet\\nresultType: systemd_logs\\nspec:\\n  tolerations:\\n  - key: node-role.kubernetes.io/master\\n    operator: Exists\\n    effect: NoSchedule\\n  - key: CriticalAddonsOnly\\n    operator: Exists\\n  hostNetwork: true\\n  hostIPC: true\\n  hostPID: true\\n  dnsPolicy: ClusterFirstWithHostNet\\n  containers:\\n  - name: systemd-logs\\n    command:\\n    - sh\\n    - -c\\n    - /get_systemd_logs.sh \\u0026\\u0026 sleep 3600\\n    env:\\n    - name: NODE_NAME\\n      valueFrom:\\n        fieldRef:\\n          apiVersion: v1\\n          fieldPath: spec.nodeName\\n    - name: RESULTS_DIR\\n      value: /tmp/results\\n    - name: CHROOT_DIR\\n      value: /node\\n    image: gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest\\n    imagePullPolicy: Always\\n    securityContext:\\n      privileged: true\\n    volumeMounts:\\n    - mountPath: /node\\n      name: root\\n    - mountPath: /tmp/results\\n      name: results\\n    - mountPath: /etc/sonobuoy\\n      name: config\\n  - name: sonobuoy-worker\\n    command:\\n    - sh\\n    - -c\\n    - /sonobuoy worker single-node -v 5 --logtostderr \\u0026\\u0026 sleep 3600\\n    env:\\n    - name: NODE_NAME\\n      valueFrom:\\n        fieldRef:\\n          apiVersion: v1\\n          fieldPath: spec.nodeName\\n    - name: RESULTS_DIR\\n      value: /tmp/results\\n    image: gcr.io/heptio-images/sonobuoy:latest\\n    imagePullPolicy: Always\\n    securityContext:\\n      privileged: true\\n    volumeMounts:\\n    - mountPath: /tmp/results\\n      name: results\\n    - mountPath: /etc/sonobuoy\\n      name: config\\n  volumes:\\n  - name: root\\n    hostPath:\\n      path: /\\n  - name: results\\n    emptyDir: {}\\n  - name: config\\n    configMap:\\n      # This will be rewritten when the DaemonSetPlugin driver goes to launch the pod.\\n      name: __SONOBUOY_CONFIGMAP__\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"component\":\"sonobuoy\"},\"name\":\"sonobuoy-plugins-cm\",\"namespace\":\"heptio-sonobuoy\"}}\n"}},"data":{"e2e.yaml":"name: e2e\ndriver: Job\nresultType: e2e\nspec:\n  serviceAccountName: sonobuoy-serviceaccount\n  tolerations:\n  - key: node-role.kubernetes.io/master\n    operator: Exists\n    effect: NoSchedule\n  - key: CriticalAddonsOnly\n    operator: Exists\n  restartPolicy: Never\n  containers:\n  - name: e2e\n    image: gcr.io/heptio-images/kube-conformance:latest\n    imagePullPolicy: Always\n    # NOTE: Full conformance can take a while depending on your cluster size.\n    # As a result, only a single test is set atm to verify correctness.\n    # Operators that want the complete test results can comment out the\n    # env section.\n    env:\n    - name: E2E_FOCUS\n      # Specifies a single conformance test. See above comment for details.\n      value: \"Pods should be submitted and removed\"\n    volumeMounts:\n    - name: results\n      mountPath: /tmp/results\n  - name: sonobuoy-worker\n    command:\n    - sh\n    - -c\n    - /sonobuoy worker global -v 5 --logtostderr\n    env:\n    - name: NODE_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: spec.nodeName\n    - name: RESULTS_DIR\n      value: /tmp/results\n    image: gcr.io/heptio-images/sonobuoy:latest\n    imagePullPolicy: Always\n    volumeMounts:\n    - name: config\n      mountPath: /etc/sonobuoy\n    - name: results\n      mountPath: /tmp/results\n  volumes:\n  - name: results\n    emptyDir: {}\n  - name: config\n    configMap:\n      # This will be rewritten when the JobPlugin driver goes to launch the pod.\n      name: __SONOBUOY_CONFIGMAP__","systemdlogs.yaml":"name: systemd_logs\ndriver: DaemonSet\nresultType: systemd_logs\nspec:\n  tolerations:\n  - key: node-role.kubernetes.io/master\n    operator: Exists\n    effect: NoSchedule\n  - key: CriticalAddonsOnly\n    operator: Exists\n  hostNetwork: true\n  hostIPC: true\n  hostPID: true\n  dnsPolicy: ClusterFirstWithHostNet\n  containers:\n  - name: systemd-logs\n    command:\n    - sh\n    - -c\n    - /get_systemd_logs.sh \u0026\u0026 sleep 3600\n    env:\n    - name: NODE_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: spec.nodeName\n    - name: RESULTS_DIR\n      value: /tmp/results\n    - name: CHROOT_DIR\n      value: /node\n    image: gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest\n    imagePullPolicy: Always\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: /node\n      name: root\n    - mountPath: /tmp/results\n      name: results\n    - mountPath: /etc/sonobuoy\n      name: config\n  - name: sonobuoy-worker\n    command:\n    - sh\n    - -c\n    - /sonobuoy worker single-node -v 5 --logtostderr \u0026\u0026 sleep 3600\n    env:\n    - name: NODE_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: spec.nodeName\n    - name: RESULTS_DIR\n      value: /tmp/results\n    image: gcr.io/heptio-images/sonobuoy:latest\n    imagePullPolicy: Always\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: /tmp/results\n      name: results\n    - mountPath: /etc/sonobuoy\n      name: config\n  volumes:\n  - name: root\n    hostPath:\n      path: /\n  - name: results\n    emptyDir: {}\n  - name: config\n    configMap:\n      # This will be rewritten when the DaemonSetPlugin driver goes to launch the pod.\n      name: __SONOBUOY_CONFIGMAP__"}},{"metadata":{"name":"sonobuoy-systemd-logs-config-1ec734112d7b40b0","namespace":"heptio-sonobuoy","selfLink":"/api/v1/namespaces/heptio-sonobuoy/configmaps/sonobuoy-systemd-logs-config-1ec734112d7b40b0","uid":"24097149-7ddf-11e7-bf00-0ea50f7b4c40","resourceVersion":"1340","creationTimestamp":"2017-08-10T15:18:19Z","labels":{"component":"sonobuoy","sonobuoy-plugin":"systemd_logs","sonobuoy-run":"1ec734112d7b40b0","tier":"analysis"}},"data":{"worker.json":"{\"masterurl\":\"http://sonobuoy-master:8080/api/v1/results/by-node\",\"resulttype\":\"systemd_logs\"}"}}]